#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C,W0611,W0718


"cli"


import os
import sys
import threading
import time
import _thread


from nixt.object  import Obj, parse
from nixt.persist import Workdir, modname
from nixt.runtime import Commands, Errors, Event, Reactor, later, scan


NAME = Reactor.__module__.split(".", maxsplit=2)[-2]
Workdir.wdr = os.path.expanduser(f"~/.{NAME}")


cfg = Obj()


if os.path.exists("mods"):
    import mods.face as MODS
else:
    MODS = None


modpath = modname()


if os.path.exists(modpath):
    sys.path.insert(0, os.getcwd())
    import mods.face as MODULES
else:
    MODULES = None


class CLI(Reactor):

    def display(self, evt):
        for txt in evt.result:
            self.say(evt.channel, txt)

    def say(self, _channel, txt):
        self.raw(txt)

    def raw(self, txt):
        print(txt)


def command(bot, evt):
    parse(evt, evt.txt)
    if "ident" in dir(bot):
        evt.orig = bot.ident
    func = Commands.cmds.get(evt.cmd, None)
    if func:
        try:
            func(evt)
            bot.display(evt)
        except Exception as ex:
            later(ex)
    evt.ready()


def errors():
    for error in Errors.errors:
        for line in error:
            print(line)


def main():
    parse(cfg, " ".join(sys.argv[1:]))
    scan(MODS, MODULES)
    cli = CLI()
    evt = Event()
    evt.txt = cfg.txt
    command(cli, evt)
    evt.wait()


if __name__ == "__main__":
    main()
    errors()
