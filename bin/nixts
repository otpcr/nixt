#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C,W0212,W0718


"service"


import getpass
import os
import pwd
import sys
import time
import _thread


from nixt.persist import Workdir, modname, pidfile, pidname
from nixt.runtime import Errors, later, launch


NAME        = Workdir.__module__.split(".", maxsplit=2)[-2]
Workdir.wdr = os.path.expanduser(f"~/.{NAME}")


if os.path.exists("mods"):
    import mods.face as MODS
else:
    MODS = None


modpth = os.path.dirname(modname())


if os.path.exists(modpth):
    sys.path.insert(0, modpth)
    import mods.face as MODA
else:
    MODA = None


def errors():
    for errr in Errors.errors:
        for line in errr:
            print(line)


def forever():
    while True:
        try:
            time.sleep(1.1)
        except (KeyboardInterrupt, EOFError):
            _thread.interrupt_main()


def privileges(username):
    pwnam2 = pwd.getpwnam(username)
    os.setgid(pwnam2.pw_gid)
    os.setuid(pwnam2.pw_uid)


def init(*pkgs):
    mods = []
    for pkga in pkgs:
        for modnam in dir(pkga):
            if modnam.startswith("__"):
                continue
            modui = getattr(pkga, modnam)
            if "init" not in dir(modui):
                continue
            thr = launch(modui.init, "init")
            mods.append((modui, thr))
    return mods


def scan(*pkgs):
    for pkg in pkgs:
        for moda in dir(pkg):
            if moda.startswith("__"):
                continue
            modo = getattr(pkg, moda)
            if "register" not in dir(modo):
                continue
            modo.register()


def wrap(func):
    try:
        func()
    except (KeyboardInterrupt, EOFError):
        pass
    except Exception as ex:
        later(ex)


def main():
    privileges(getpass.getuser())
    pidfile(pidname(NAME))
    scan(MODS, MODA)
    init(MODS, MODA)
    forever()


if __name__ == "__main__":
    wrap(main)
    errors()
